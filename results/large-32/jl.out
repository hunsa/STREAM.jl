[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->2  [0m[1;34m1->4  [0m[1;34m2->6  [0m[1;34m3->8  [0m[1;34m4->10  [0m[1;34m5->12  [0m[1;34m6->14  [0m[1;34m7->16  [0m[1;34m8->18  [0m[1;34m9->20  [0m[1;34m10->22  [0m[1;34m11->24  [0m[1;34m12->26  [0m[1;34m13->28  [0m[1;34m14->30  [0m[1;34m15->1  [0m[1;34m16->3  [0m[1;34m17->5  [0m[1;34m18->7  [0m[1;34m19->9  [0m[1;34m20->11  [0m[1;34m21->13  [0m[1;34m22->15  [0m[1;34m23->17  [0m[1;34m24->19  [0m[1;34m25->21  [0m[1;34m26->23  [0m[1;34m27->25  [0m[1;34m28->27  [0m[1;34m29->29  [0m[1;34m30->31  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139906659112704 -> core 2 - OK[0m[1;34m
[0m[1;34m	threadid 139906426164992 -> core 4 - OK[0m[1;34m
[0m[1;34m	threadid 139906336679680 -> core 6 - OK[0m[1;34m
[0m[1;34m	threadid 139906319894272 -> core 8 - OK[0m[1;34m
[0m[1;34m	threadid 139906303108864 -> core 10 - OK[0m[1;34m
[0m[1;34m	threadid 139906076636928 -> core 12 - OK[0m[1;34m
[0m[1;34m	threadid 139906059851520 -> core 14 - OK[0m[1;34m
[0m[1;34m	threadid 139906043066112 -> core 16 - OK[0m[1;34m
[0m[1;34m	threadid 139906026280704 -> core 18 - OK[0m[1;34m
[0m[1;34m	threadid 139905799808768 -> core 20 - OK[0m[1;34m
[0m[1;34m	threadid 139905783023360 -> core 22 - OK[0m[1;34m
[0m[1;34m	threadid 139905766237952 -> core 24 - OK[0m[1;34m
[0m[1;34m	threadid 139905472657152 -> core 26 - OK[0m[1;34m
[0m[1;34m	threadid 139905455871744 -> core 28 - OK[0m[1;34m
[0m[1;34m	threadid 139905439086336 -> core 30 - OK[0m[1;34m
[0m[1;34m	threadid 139905422300928 -> core 1 - OK[0m[1;34m
[0m[1;34m	threadid 139905195828992 -> core 3 - OK[0m[1;34m
[0m[1;34m	threadid 139905179043584 -> core 5 - OK[0m[1;34m
[0m[1;34m	threadid 139905162258176 -> core 7 - OK[0m[1;34m
[0m[1;34m	threadid 139904868677376 -> core 9 - OK[0m[1;34m
[0m[1;34m	threadid 139904851891968 -> core 11 - OK[0m[1;34m
[0m[1;34m	threadid 139904835106560 -> core 13 - OK[0m[1;34m
[0m[1;34m	threadid 139904818321152 -> core 15 - OK[0m[1;34m
[0m[1;34m	threadid 139904591849216 -> core 17 - OK[0m[1;34m
[0m[1;34m	threadid 139904575063808 -> core 19 - OK[0m[1;34m
[0m[1;34m	threadid 139904558278400 -> core 21 - OK[0m[1;34m
[0m[1;34m	threadid 139904264697600 -> core 23 - OK[0m[1;34m
[0m[1;34m	threadid 139904247912192 -> core 25 - OK[0m[1;34m
[0m[1;34m	threadid 139904231126784 -> core 27 - OK[0m[1;34m
[0m[1;34m	threadid 139904214341376 -> core 29 - OK[0m[1;34m
[0m[1;34m	threadid 139903987869440 -> core 31 - OK[0m[1;34m
[0m[1;34mRoundrobin placement triggered
	threadid 139903971084032 -> core 0 - OK[0m[1;34m
[0mSTREAM.jl
----------------------------------------------
Array size = 1000000000 (elements) Offset = 0 (elements)
Memory per array = 7629.395 MiB (= 7.451 GiB)
Total memory = 22888.184 MiB
Each kernel will be executed 100 times
 The *best* time for each kernel (excluding the first run)
 will be used to compute the reported bandwidth.
----------------------------------------------
Using 32 threads
Your clock granularity/precision appears to be 1048.000ns
Each test below will take on the order of 120914.419 microseconds
    (= 115.000 clock ticks)
Increase the size of the arrays if this shows that
 you are not getting at least 20,000 clock ticks per test.
----------------------------------------------
Function   Best Rate MB/s  Avg time    Min time    Max time
Copy:	    109832.6     0.146881     0.145676     0.150086
Scale:	    109519.7     0.146909     0.146092     0.149173
Add:	    123410.0     0.197517     0.194474     0.201830
Triad:	    123471.5     0.195540     0.194377     0.196915
aj = 8131223550704304958367105871878761624364116078561909158700639572545038921278316661384753877204194106215605780518797312.000000, bj = 1626244710140860935679802619930647060936766201501274878698990483642769411755935808182153995936815186721183824313581568.000000, cj = 2168326280187814580906403493240862747915688268668366504931987311523692549007914410909538661249086915628245099084775424.000000Everything validated successfully with an error rate under: 0.000
